// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirtoCommerce.CatalogPublishingModule.Data.Repositories;

#nullable disable

namespace VirtoCommerce.CatalogPublishingModule.Data.PostgreSql.Migrations
{
    [DbContext(typeof(CatalogPublishingDbContext))]
    partial class CatalogPublishingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelCurrencyEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("CompletenessChannelCurrency", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CatalogId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EvaluatorType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("CompletenessChannel", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelLanguageEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("CompletenessChannelLanguage", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessDetailEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CompletenessEntryId")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<int>("CompletenessPercent")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("CompletenessEntryId");

                    b.ToTable("CompletenessDetail", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessEntryEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<int>("CompletenessPercent")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("CompletenessEntry", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelCurrencyEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelEntity", "Channel")
                        .WithMany("Currencies")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelLanguageEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelEntity", "Channel")
                        .WithMany("Languages")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessDetailEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessEntryEntity", "CompletenessEntry")
                        .WithMany("Details")
                        .HasForeignKey("CompletenessEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletenessEntry");
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessEntryEntity", b =>
                {
                    b.HasOne("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelEntity", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessChannelEntity", b =>
                {
                    b.Navigation("Currencies");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("VirtoCommerce.CatalogPublishingModule.Data.Model.CompletenessEntryEntity", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
